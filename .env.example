########## 基本配置 ##########

# 基础根目录，以下所有目录都是相对此目录
# 此.env.example的目录如下：
# .
# ├── mysql
# |   ├── conf
# |   |    └── my.cnf
# |   └── data
# ├── nginx
# |   ├── conf
# |   |    ├── nginx.conf
# |   |    └── vhost
# |   └── log
# ├── php
# |   ├── conf
# |   |    └── php.ini
# |   └── log
# ├── redis
# |   ├── conf
# |   |    └── redis.conf
# |   └── data
# └── www
#
APP_LOCATION=/path/to/data

# 环境development/production
APP_ENV=development

# 工作目录，代码存放位置(相对于APP_LOCATION)
WORKSPACE=/www


########## MySQL ##########

# MySQL版本，将直接使用版本号去官方仓库拉取对应的镜像
MYSQL_VERSION=5.7.21

# MySQL密码
MYSQL_PASSWORD=test

# MySQL端口
MYSQL_PORT=3306

# MySQL数据目录(相对于APP_LOCATION)
MYSQL_DATA_DIR=/mysql/data

# MySQL配置目录(相对于APP_LOCATION)
MYSQL_CONF_DIR=/mysql/conf

# MySQL限制存储日志量
MYSQL_MAX_SIZE=20m

########## Redis ##########

# Redis端口
REDIS_PORT=6379

# Redis数据目录，存放数据备份等文件(相对于APP_LOCATION)
REDIS_DATA_DIR=/redis/data

# Redis配置文件(相对于APP_LOCATION)
REDIS_CONF_FILE=/redis/conf/redis.conf

# Redis限制存储日志量
REDIS_MAX_SIZE=20m


########## PHP ##########

# PHP端口
PHP_PORT=9000

# PHP日志目录(相对于APP_LOCATION)
PHP_LOG_DIR=/php/log

# php.ini文件(相对于APP_LOCATION)
PHP_INI_FILE=/php/conf/php.ini

# php限制存储日志量
PHP_MAX_SIZE=20m


########## Nginx ##########

# Nginx端口
NGINX_PORT=80
NGINX_HTTPS_PORT=443

# Nginx日志目录(相对于APP_LOCATION)
NGINX_LOG_DIR=/nginx/log

# Nginx主配置文件(相对于APP_LOCATION)
NGINX_CONF_FILE=/nginx/conf/nginx.conf

# Nginx域名配置目录(相对于APP_LOCATION)
NGINX_HOST_CONF_DIR=/nginx/conf/vhost

# Nginx限制存储日志量
NGINX_MAX_SIZE=20m


########## docker-sync ##########

# 同步策略
DOCKER_SYNC_STRATEGY=unison

# sync_userid
# 设置同步的文件的用户ID，此值应设为运行php和nginx的用户uid
DOCKER_SYNC_USERID=1000

# 同步目录
# 一般来说，保持与APP_LOCATION/WORKSPACE一样就行了。
# 但是在window10不起作用，所以使用特殊挂载点。
# /mnt/c/...
# 留空则保持APP_LOCATION/WORKSPACE一样
# 详见：https://github.com/EugenMayer/docker-sync/wiki/docker-sync-on-Windows#11-bonus-bind-custom-mount-points-to-fix-docker-for-windows-and-wsl-differences-thanks-to-nickjanetakis
#
DOCKER_SYNC_SRC=/path/to/data